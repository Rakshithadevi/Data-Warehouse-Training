 ----- MongoDB Schema & Relationships Exercise Set -----------------

----- Section 1: Working with Schemas & Data Types 
test> use trainingdb
switched to db trainingdb
trainingdb> db.employees.insertMany([
...   {
...     name: "Alice Sharma",
...     age: 30,
...     isManager: true,
...     skills: ["JavaScript", "Node.js", "MongoDB"],
...     joiningDate: new Date("2021-01-15"),
...     profile: { linkedin: "linkedin.com/in/alice", portfolio: "alice.dev" }
...   },
...   {
...     name: "Ravi Kumar",
...     age: 25,
...     isManager: false,
...     skills: ["Python", "Django"],
...     joiningDate: new Date("2022-05-20"),
...     profile: { linkedin: "linkedin.com/in/ravi", portfolio: "ravi.codes" }
...   },
...   {
...     name: "Nina D'Souza",
...     age: 28,
...     isManager: false,
...     skills: ["React", "Redux", "TypeScript", "HTML"],
...     joiningDate: new Date("2023-01-10"),
...     profile: { linkedin: "linkedin.com/in/nina", portfolio: "nina.dev" }
...   },
...   {
...     name: "Mohit Verma",
...     age: 35,
...     isManager: true,
...     skills: ["Java", "Spring Boot", "Docker"],
...     joiningDate: new Date("2020-09-01"),
...     profile: { linkedin: "linkedin.com/in/mohit", portfolio: "mohit.io" }
...   }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68334c744509f9b0b06c4bd0'),
    '1': ObjectId('68334c744509f9b0b06c4bd1'),
    '2': ObjectId('68334c744509f9b0b06c4bd2'),
    '3': ObjectId('68334c744509f9b0b06c4bd3')
  }
}
trainingdb> db.employees.find({ "skills.2": { $exists: true } })
[
  {
    _id: ObjectId('68334c744509f9b0b06c4bd0'),
    name: 'Alice Sharma',
    age: 30,
    isManager: true,
    skills: [ 'JavaScript', 'Node.js', 'MongoDB' ],
    joiningDate: ISODate('2021-01-15T00:00:00.000Z'),
    profile: { linkedin: 'linkedin.com/in/alice', portfolio: 'alice.dev' }
  },
  {
    _id: ObjectId('68334c744509f9b0b06c4bd2'),
    name: "Nina D'Souza",
    age: 28,
    isManager: false,
    skills: [ 'React', 'Redux', 'TypeScript', 'HTML' ],
    joiningDate: ISODate('2023-01-10T00:00:00.000Z'),
    profile: { linkedin: 'linkedin.com/in/nina', portfolio: 'nina.dev' }
  },
  {
    _id: ObjectId('68334c744509f9b0b06c4bd3'),
    name: 'Mohit Verma',
    age: 35,
    isManager: true,
    skills: [ 'Java', 'Spring Boot', 'Docker' ],
    joiningDate: ISODate('2020-09-01T00:00:00.000Z'),
    profile: { linkedin: 'linkedin.com/in/mohit', portfolio: 'mohit.io' }
  }
]
trainingdb> db.employees.find({ joiningDate: { $gt: new Date("2022-01-01") } })
[
  {
    _id: ObjectId('68334c744509f9b0b06c4bd1'),
    name: 'Ravi Kumar',
    age: 25,
    isManager: false,
    skills: [ 'Python', 'Django' ],
    joiningDate: ISODate('2022-05-20T00:00:00.000Z'),
    profile: { linkedin: 'linkedin.com/in/ravi', portfolio: 'ravi.codes' }
  },
  {
    _id: ObjectId('68334c744509f9b0b06c4bd2'),
    name: "Nina D'Souza",
    age: 28,
    isManager: false,
    skills: [ 'React', 'Redux', 'TypeScript', 'HTML' ],
    joiningDate: ISODate('2023-01-10T00:00:00.000Z'),
    profile: { linkedin: 'linkedin.com/in/nina', portfolio: 'nina.dev' }
  }
]
trainingdb> db.employees.updateOne({ name: "Alice Sharma" }, { $set: { ratinrating: 4.5 } })
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
trainingdb> db.employees.find({ rating: { $type: "double" } })
[
  {
    _id: ObjectId('68334c744509f9b0b06c4bd0'),
    name: 'Alice Sharma',
    age: 30,
    isManager: true,
    skills: [ 'JavaScript', 'Node.js', 'MongoDB' ],
    joiningDate: ISODate('2021-01-15T00:00:00.000Z'),
    profile: { linkedin: 'linkedin.com/in/alice', portfolio: 'alice.dev' },
    rating: 4.5
  }
]
trainingdb> db.employees.find({}, { _id: 0, name: 1, skills: 1 })
[
  {
    name: 'Alice Sharma',
    skills: [ 'JavaScript', 'Node.js', 'MongoDB' ]
  },
  { name: 'Ravi Kumar', skills: [ 'Python', 'Django' ] },
  {
    name: "Nina D'Souza",
    skills: [ 'React', 'Redux', 'TypeScript', 'HTML' ]
  },
  { name: 'Mohit Verma', skills: [ 'Java', 'Spring Boot', 'Docker' ] }
]

----  Section 2: One-to-One (Embedded) 
trainingdb> use schooldb
switched to db schooldb
schooldb> db.students.insertMany([
...   {
...     name: "Rahul Singh",
...     guardian: { name: "Sita Singh", phone: "9876543210", relation: "Mother" }
...   },
...   {
...     name: "Anjali Patel",
...     guardian: { name: "Rajesh Patel", phone: "9123456780", relation: "Father" }
...   },
...   {
...     name: "Aryan Khan",
...     guardian: { name: "Farah Khan", phone: "9988776655", relation: "Mother" }
...   }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68334d204509f9b0b06c4bd4'),
    '1': ObjectId('68334d204509f9b0b06c4bd5'),
    '2': ObjectId('68334d204509f9b0b06c4bd6')
  }
}
schooldb> db.students.find({ "guardian.relation": "Mother" })
[
  {
    _id: ObjectId('68334d204509f9b0b06c4bd4'),
    name: 'Rahul Singh',
    guardian: { name: 'Sita Singh', phone: '9876543210', relation: 'Mother' }
  },
  {
    _id: ObjectId('68334d204509f9b0b06c4bd6'),
    name: 'Aryan Khan',
    guardian: { name: 'Farah Khan', phone: '9988776655', relation: 'Mother' }
  }
]
schooldb> db.students.updateOne(
...   { name: "Rahul Singh" },
...   { $set: { "guardian.phone": "9999999999" } }
... )
...
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

---  Section 3: One-to-Many (Embedded) 
schooldb> db.teachers.insertMany([
...   { name: "Mr. Ramesh", classes: ["Math", "Physics"] },
...   { name: "Ms. Leela", classes: ["Biology", "Chemistry"] },
...   { name: "Dr. Rehan", classes: ["Physics", "Astronomy"] }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68334d4e4509f9b0b06c4bd7'),
    '1': ObjectId('68334d4e4509f9b0b06c4bd8'),
    '2': ObjectId('68334d4e4509f9b0b06c4bd9')
  }
}
schooldb> db.teachers.find({ classes: "Physics" })
[
  {
    _id: ObjectId('68334d4e4509f9b0b06c4bd7'),
    name: 'Mr. Ramesh',
    classes: [ 'Math', 'Physics' ]
  },
  {
    _id: ObjectId('68334d4e4509f9b0b06c4bd9'),
    name: 'Dr. Rehan',
    classes: [ 'Physics', 'Astronomy' ]
  }
]
schooldb> db.teachers.updateOne(
...   { name: "Mr. Ramesh" },
...   { $addToSet: { classes: "Robotics" } }
... )
...
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
schooldb> db.teachers.updateOne(
...   { name: "Mr. Ramesh" },
...   { $pull: { classes: "Math" } }
... )
...
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

----- Section 4: One-to-Many (Referenced) 
schooldb> use academia
switched to db academia
academia> db.courses.insertMany([
...   { _id: ObjectId(), title: "Machine Learning", credits: 4 },
...   { _id: ObjectId(), title: "Web Development", credits: 3 },
...   { _id: ObjectId(), title: "Data Structures", credits: 3 }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68334d7e4509f9b0b06c4bda'),
    '1': ObjectId('68334d7e4509f9b0b06c4bdb'),
    '2': ObjectId('68334d7e4509f9b0b06c4bdc')
  }
}
academia> db.students.insertMany([
...   { name: "Karan", enrolledCourse: courseId },
...   { name: "Riya", enrolledCourse: courseId }
... ])
...
academia> courseId = db.courses.findOne({ title: "Machine Learning" })._id
ObjectId('68334d7e4509f9b0b06c4bda')
academia> db.students.insertMany([
...   { name: "Karan", enrolledCourse: courseId },
...   { name: "Riya", enrolledCourse: courseId }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68334dd34509f9b0b06c4bdd'),
    '1': ObjectId('68334dd34509f9b0b06c4bde')
  }
}
academia> db.students.find({ enrolledCourse: courseId })
[
  {
    _id: ObjectId('68334dd34509f9b0b06c4bdd'),
    name: 'Karan',
    enrolledCourse: ObjectId('68334d7e4509f9b0b06c4bda')
  },
  {
    _id: ObjectId('68334dd34509f9b0b06c4bde'),
    name: 'Riya',
    enrolledCourse: ObjectId('68334d7e4509f9b0b06c4bda')
  }
]
academia> db.courses.find({ _id: courseId })
[
  {
    _id: ObjectId('68334d7e4509f9b0b06c4bda'),
    title: 'Machine Learning',
    credits: 4
  }
]

----- Section 5: $lookup (Join in Aggregation) 
academia> use academia
already on db academia
academia> db.students.aggregate([
...   {
...     $lookup: {
...       from: "courses",                // The collection to join with
...       localField: "enrolledCourse",   // Field in students
...       foreignField: "_id",            // Field in courses
...       as: "courseInfo"                // Output array field
...     }
...   }
... ])
...
[
  {
    _id: ObjectId('68334dd34509f9b0b06c4bdd'),
    name: 'Karan',
    enrolledCourse: ObjectId('68334d7e4509f9b0b06c4bda'),
    courseInfo: [
      {
        _id: ObjectId('68334d7e4509f9b0b06c4bda'),
        title: 'Machine Learning',
        credits: 4
      }
    ]
  },
  {
    _id: ObjectId('68334dd34509f9b0b06c4bde'),
    name: 'Riya',
    enrolledCourse: ObjectId('68334d7e4509f9b0b06c4bda'),
    courseInfo: [
      {
        _id: ObjectId('68334d7e4509f9b0b06c4bda'),
        title: 'Machine Learning',
        credits: 4
      }
    ]
  }
]
academia> db.students.aggregate([
...   {
...     $lookup: {
...       from: "courses",
...       localField: "enrolledCourse",
...       foreignField: "_id",
...       as: "courseInfo"
...     }
...   },
...   {
...     $project: {
...       _id: 0,
...       name: 1,
...       courseTitle: { $arrayElemAt: ["$courseInfo.title", 0] }
...     }
...   }
... ])
...
[
  { name: 'Karan', courseTitle: 'Machine Learning' },
  { name: 'Riya', courseTitle: 'Machine Learning' }
]
academia> db.students.aggregate([
...   {
...     $lookup: {
...       from: "courses",
...       localField: "enrolledCourse",
...       foreignField: "_id",
...       as: "courseInfo"
...     }
...   },
...   {
...     $match: { "courseInfo.title": "Machine Learning" }
...   },
...   {
...     $project: {
...       _id: 0,
...       name: 1,
...       courseTitle: { $arrayElemAt: ["$courseInfo.title", 0] }
...     }
...   }
... ])
...
[
  { name: 'Karan', courseTitle: 'Machine Learning' },
  { name: 'Riya', courseTitle: 'Machine Learning' }
]
academia>